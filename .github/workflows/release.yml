name: Release

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:

  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ env.GitBuildVersion }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build GithubBackup.sln --configuration Release --no-restore
        
      - name: Get Version
        id: nerbank_gitversioning
        uses: dotnet/nbgv@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GitBuildVersion }}
          release_name: Release ${{ env.GitBuildVersion }}
          body: |
          draft: false
          prerelease: false
  
  windows:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Install Nerdbank.GitVersioning
        run: install --tool-path . nbgv
        
      - name: Nerdbank.GitVersioning SetVersion
        run: nbgv cloud

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build GithubBackup.sln --configuration Release --no-restore

      - name: Test
        run: dotnet test GithubBackup.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish GithubBackup.Cli/GithubBackup.Cli.csproj --configuration Release --output publish/win-x64 --runtime win-x64 --self-contained

      - name: Zip
        run: Compress-Archive -Path ./publish/win-x64/* -DestinationPath ./publish/ghb_win_x64_${{ needs.release.outputs.version }}.zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./publish/ghb_win_x64_${{ needs.release.outputs.version }}.zip
          asset_name: ghb_win_x64_${{ needs.release.outputs.version }}.zip
          asset_content_type: application/zip
          
  linux:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Nerdbank.GitVersioning
        run: install --tool-path . nbgv

      - name: Nerdbank.GitVersioning SetVersion
        run: nbgv cloud

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build GithubBackup.sln --configuration Release --no-restore

      - name: Test
        run: dotnet test GithubBackup.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish GithubBackup.Cli/GithubBackup.Cli.csproj --configuration Release --output publish/linux-x64 --runtime linux-x64 --self-contained
        
      - name: Zip
        run: zip -r ghb_linux_x64_${{ needs.release.outputs.version }}.zip ./*
        working-directory: ./publish/linux-x64/

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./publish/linux-x64/ghb_linux_x64_${{ needs.release.outputs.version }}.zip
          asset_name: ghb_linux_x64_${{ needs.release.outputs.version }}.zip
          asset_content_type: application/zip
  
  macos:
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Nerdbank.GitVersioning
        run: install --tool-path . nbgv

      - name: Nerdbank.GitVersioning SetVersion
        run: nbgv cloud

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build GithubBackup.sln --configuration Release --no-restore

      - name: Test
        run: dotnet test GithubBackup.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish GithubBackup.Cli/GithubBackup.Cli.csproj --configuration Release --output publish/osx-x64 --runtime osx-x64 --self-contained

      - name: Zip
        run: zip -r ghb_osx_x64_${{ needs.release.outputs.version }}.zip ./*
        working-directory: ./publish/osx-x64/

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./publish/osx-x64/ghb_osx_x64_${{ needs.release.outputs.version }}.zip
          asset_name: ghb_osx_x64_${{ needs.release.outputs.version }}.zip
          asset_content_type: application/zip